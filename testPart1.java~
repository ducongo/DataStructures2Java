
public static void main(String[] args) {
     //List<Integer> tr = new ArrayDeque<Integer>(Integer.class);
    Treque<Integer> tr = new Treque<>(Integer.class);
    int K = 1000000;
    Stopwatch s = new Stopwatch();
    System.out.print("Appending " + K + " items...");
    System.out.flush();
    s.start();
    for (int i = 0; i < K; i++) {
      tr.add(i);
    }
    s.stop();
    System.out.println("done (" + s.elapsedSeconds() + "s)");
    
    System.out.print("Prepending " + K + " items...");
    System.out.flush();
    s.start();
    for (int i = 0; i < K; i++) {
      tr.add(0, i);
    }
    s.stop();
    System.out.println("done (" + s.elapsedSeconds() + "s)");
    
    System.out.print("Midpending(?!) " + K + " items...");
    System.out.flush();
    s.start();
    for (int i = 0; i < K; i++) {
      tr.add(tr.size()/2, i);
    }
    s.stop();
    System.out.println("done (" + s.elapsedSeconds() + "s)");
    
    
    System.out.print("Removing " + K + " items from the back...");
    System.out.flush();
    s.start();
    for (int i = 0; i < K; i++) {
      tr.remove(tr.size()-1);
    }
    s.stop();
    System.out.println("done (" + s.elapsedSeconds() + "s)");
    
    System.out.print("Removing " + K + " items from the front...");
    System.out.flush();
    s.start();
    for (int i = 0; i < K; i++) {
      tr.remove(0);
    }
    s.stop();
    System.out.println("done (" + s.elapsedSeconds() + "s)");
    
    System.out.print("Removing " + K + " items from the middle...");
    System.out.flush();
    s.start();
    for (int i = 0; i < K; i++) {
      tr.remove(tr.size()/2);
    }
    s.stop();
    System.out.println("done (" + s.elapsedSeconds() + "s)");
  }